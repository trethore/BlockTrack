generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Token {
  id                 String      @id @default(uuid()) @map("tokenId")
  symbol             String      @unique
  name               String
  rank               Int
  priceUSD           Float
  marketCapUsd       Float?
  volume24hUsd       Float?
  circulatingSupply  BigInt?
  totalSupply        BigInt?
  maxSupply          BigInt?
  percentChange1h    Float?
  percentChange24h   Float?
  percentChange7d    Float?
  percentChange30d   Float?
  percentChange1y    Float?
  marketCapChange24h Float?
  lastUpdated        DateTime?
  lastDataPointsUpdate DateTime?

  dataPoints         DataPoint[]
  favorites          Favorite[]

  @@index([rank])
}

model User {
  id             String     @id @default(uuid()) @map("userId")
  email          String     @unique
  username       String     @unique
  passwordHash   String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  favorites      Favorite[]
}

model Favorite {
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  token    Token  @relation(fields: [tokenId], references: [id], onDelete: Cascade)
  tokenId  String

  @@id([userId, tokenId])
  @@index([userId])
  @@index([tokenId])
}

model DataPoint {
  id        String    @id @default(uuid())
  token     Token     @relation(fields: [tokenId], references: [id], onDelete: Cascade)
  tokenId   String
  date      DateTime
  priceUSD  Float

  @@index([tokenId, date])
}

model TokenUpdateLog {
  id              String    @id @default("SINGLETON")
  lastRefreshedAt DateTime?
}